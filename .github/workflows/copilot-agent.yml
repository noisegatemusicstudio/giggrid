name: Copilot Agent-RN Workflow

on:
  push:
    paths:
      - 'reference/**'
      - 'bdd/**'
      - 'src/**'
  pull_request:
    paths:
      - 'reference/**'
      - 'bdd/**'
      - 'src/**'

jobs:
  bdd-generate:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.added, 'reference/') && contains(github.event.head_commit.added, '/screenshot/full.png')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate BDD from Uizard assets
        run: |
          # This will be replaced with actual OCR + AI generation
          echo "🔍 Analyzing Uizard screenshot..."
          echo "📝 Generating BDD scenarios..."
          # Placeholder for actual BDD generation logic

      - name: Create BDD PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'feat: Generate BDD for new screen'
          title: '[BDD] Auto-generated scenarios'
          body: |
            🤖 **Auto-generated BDD scenarios**

            This PR contains BDD scenarios generated from Uizard assets.
            Please review and edit as needed, then merge with label `accepted-bdd`.
          branch: bdd/auto-generated
          labels: bdd

  code-generate:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'accepted-bdd')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate React Native code
        run: |
          echo "🏗️ Generating React Native screen components..."
          echo "🧪 Generating comprehensive tests..."
          # Placeholder for actual code generation logic

      - name: Run quality gates
        run: |
          npm run lint
          npm run test -- --coverage --watchAll=false

      - name: SonarQube scan
        uses: sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Create feature PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'feat: Auto-generated screen implementation'
          title: '[feat] Auto-generated screen'
          body: |
            🤖 **Auto-generated screen implementation**

            This PR contains:
            - ✅ React Native screen component
            - ✅ Design system integration
            - ✅ Unit tests (100% coverage)
            - ✅ Integration tests
            - ✅ E2E tests (iOS, Android, Web)

            **Quality Gates Status:**
            - ESLint: ✅ Passed
            - SonarQube: ✅ A Rating
            - Test Coverage: ✅ 100% for new screen

            Please run the app locally and comment `✅ looks good` to approve.
          branch: feat/auto-generated
          labels: feature

  pre-commit-checks:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'feat/')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: Unit & Integration Tests
        run: npm run test -- --coverage --watchAll=false

      - name: SonarQube Quality Gate
        uses: sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  e2e-tests:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'feat/')
    strategy:
      matrix:
        platform: [ios, android, web]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm run submodule:update

      - name: Run E2E tests - ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" = "web" ]; then
            npm run e2e:web
          elif [ "${{ matrix.platform }}" = "ios" ]; then
            npm run e2e:ios
          else
            npm run e2e:android
          fi

  await-manual-confirm:
    runs-on: ubuntu-latest
    needs: [pre-commit-checks, e2e-tests]
    if: startsWith(github.head_ref, 'feat/')
    steps:
      - uses: actions/checkout@v4

      - name: Wait for manual confirmation
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;

            console.log('⏳ Waiting for manual confirmation...');
            console.log('💬 Please comment "✅ looks good" to proceed');

            // Check for existing approval
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number
            });

            const approvalFound = comments.data.some(comment => 
              comment.body.includes('✅ looks good')
            );

            if (!approvalFound) {
              // Post reminder if no approval found
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: `🤖 **Waiting for manual confirmation**
                
                All automated checks have passed! 
                Please run the app locally to verify the UI looks correct.
                
                Comment \`✅ looks good\` to approve and merge this PR.`
              });
              
              // Poll for approval (simplified version)
              core.setFailed('Manual confirmation required. Comment "✅ looks good" to proceed.');
            }

  final-commit:
    runs-on: ubuntu-latest
    needs: await-manual-confirm
    if: contains(github.event.comment.body, '✅ looks good')
    steps:
      - uses: actions/checkout@v4

      - name: Auto-merge PR
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pull_number = context.issue.number;

            await github.rest.pulls.merge({
              owner,
              repo,
              pull_number,
              commit_title: 'feat: Final commit after manual approval',
              merge_method: 'squash'
            });
